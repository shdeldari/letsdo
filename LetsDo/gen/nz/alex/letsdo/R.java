/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package nz.alex.letsdo;

public final class R {
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int backgroundDrawable=0x7f010007;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorChecked=0x7f010006;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorUnChecked=0x7f010005;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerPadding=0x7f010009;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isChecked=0x7f01000a;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchDrawable=0x7f010008;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f010003;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f010004;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchStyle=0x7f010000;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textLeft=0x7f010001;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textRight=0x7f010002;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Customize dimensions originally defined in res/values/dimens.xml (such as
         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
    
         */
        public static final int activity_horizontal_margin=0x7f040000;
        public static final int activity_vertical_margin=0x7f040001;
    }
    public static final class drawable {
        public static final int ic_launcher=0x7f020000;
        public static final int ic_menu_delete=0x7f020001;
        public static final int switch_bg_holo_dark=0x7f020002;
        public static final int switch_bg_holo_light=0x7f020003;
        public static final int switch_thumb_activated_holo_dark=0x7f020004;
        public static final int switch_thumb_activated_holo_light=0x7f020005;
    }
    public static final class id {
        public static final int LinearLayout1=0x7f08000c;
        public static final int ScrollView1=0x7f080000;
        public static final int action_settings=0x7f080018;
        public static final int addTask=0x7f08000e;
        public static final int addValue=0x7f080017;
        public static final int chkBox=0x7f080012;
        public static final int delTask=0x7f08000b;
        public static final int discardTask=0x7f08000a;
        public static final int group=0x7f080013;
        public static final int listView1=0x7f080010;
        public static final int list_item=0x7f080014;
        public static final int newValue=0x7f080016;
        public static final int panel=0x7f08000d;
        public static final int saveTask=0x7f080009;
        public static final int spinnerAssignee=0x7f080006;
        public static final int spinnerCategory=0x7f080004;
        public static final int switch1=0x7f08000f;
        public static final int task=0x7f080011;
        public static final int taskDescription=0x7f080008;
        public static final int taskTitle=0x7f080002;
        public static final int taskTxt=0x7f080015;
        public static final int textAssignee=0x7f080005;
        public static final int textCategory=0x7f080003;
        public static final int textDescription=0x7f080007;
        public static final int textTitle=0x7f080001;
    }
    public static final class layout {
        public static final int activity_change=0x7f030000;
        public static final int activity_main=0x7f030001;
        public static final int child_item=0x7f030002;
        public static final int group_item=0x7f030003;
        public static final int list_item=0x7f030004;
        public static final int multiple_selection=0x7f030005;
        public static final int new_value=0x7f030006;
    }
    public static final class menu {
        public static final int add=0x7f070000;
        public static final int change=0x7f070001;
        public static final int main=0x7f070002;
    }
    public static final class string {
        public static final int action_settings=0x7f050001;
        public static final int addAssigneeTitle=0x7f050012;
        public static final int addCategoryTitle=0x7f050011;
        public static final int addTask=0x7f05000a;
        public static final int addValue=0x7f050010;
        public static final int app_name=0x7f050000;
        public static final int assigneeHint=0x7f050013;
        public static final int categoryHint=0x7f05000e;
        public static final int customValue=0x7f05000f;
        public static final int delTask=0x7f050018;
        public static final int discardTask=0x7f05000c;
        public static final int filterSw=0x7f050019;
        public static final int left=0x7f05001a;
        public static final int right=0x7f05001b;
        public static final int saveTask=0x7f05000b;
        public static final int selectAll=0x7f050017;
        public static final int taskAssignee=0x7f050003;
        public static final int taskCategory=0x7f050004;
        public static final int taskDateCreated=0x7f050007;
        public static final int taskDateDue=0x7f050006;
        public static final int taskDateModified=0x7f050008;
        public static final int taskDescription=0x7f050005;
        public static final int taskStatus=0x7f050009;
        public static final int taskTitle=0x7f050002;
        public static final int titleHint=0x7f05000d;
        public static final int title_activity_add=0x7f050014;
        public static final int title_activity_change=0x7f050015;
        public static final int title_activity_select=0x7f050016;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f060000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f060001;
        public static final int AppThemeDark=0x7f060002;
        public static final int AppThemeLight=0x7f060003;
        public static final int switch_dark=0x7f060004;
        public static final int switch_light=0x7f060005;
    }
    public static final class styleable {
        /** Attributes that can be used with a Switch.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Switch_backgroundDrawable nz.alex.letsdo:backgroundDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_colorChecked nz.alex.letsdo:colorChecked}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_colorUnChecked nz.alex.letsdo:colorUnChecked}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_innerPadding nz.alex.letsdo:innerPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_isChecked nz.alex.letsdo:isChecked}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_switchDrawable nz.alex.letsdo:switchDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_switchMinWidth nz.alex.letsdo:switchMinWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_switchPadding nz.alex.letsdo:switchPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_textLeft nz.alex.letsdo:textLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #Switch_textRight nz.alex.letsdo:textRight}</code></td><td></td></tr>
           </table>
           @see #Switch_backgroundDrawable
           @see #Switch_colorChecked
           @see #Switch_colorUnChecked
           @see #Switch_innerPadding
           @see #Switch_isChecked
           @see #Switch_switchDrawable
           @see #Switch_switchMinWidth
           @see #Switch_switchPadding
           @see #Switch_textLeft
           @see #Switch_textRight
         */
        public static final int[] Switch = {
            0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004,
            0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a
        };
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#backgroundDrawable}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name nz.alex.letsdo:backgroundDrawable
        */
        public static final int Switch_backgroundDrawable = 6;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#colorChecked}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:colorChecked
        */
        public static final int Switch_colorChecked = 5;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#colorUnChecked}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:colorUnChecked
        */
        public static final int Switch_colorUnChecked = 4;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#innerPadding}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:innerPadding
        */
        public static final int Switch_innerPadding = 8;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#isChecked}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:isChecked
        */
        public static final int Switch_isChecked = 9;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#switchDrawable}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:switchDrawable
        */
        public static final int Switch_switchDrawable = 7;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#switchMinWidth}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:switchMinWidth
        */
        public static final int Switch_switchMinWidth = 2;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#switchPadding}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:switchPadding
        */
        public static final int Switch_switchPadding = 3;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#textLeft}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:textLeft
        */
        public static final int Switch_textLeft = 0;
        /**
          <p>This symbol is the offset where the {@link nz.alex.letsdo.R.attr#textRight}
          attribute's value can be found in the {@link #Switch} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name nz.alex.letsdo:textRight
        */
        public static final int Switch_textRight = 1;
    };
}
